// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.40.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/aiscript.dart';
import 'api/aiscript/api.dart';
import 'api/aiscript/play.dart';
import 'api/aiscript/ui.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'frb_generated.io.dart' if (dart.library.html) 'frb_generated.web.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Main entrypoint of the Rust API
class RustLib extends BaseEntrypoint<RustLibApi, RustLibApiImpl, RustLibWire> {
  @internal
  static final instance = RustLib._();

  RustLib._();

  /// Initialize flutter_rust_bridge
  static Future<void> init({
    RustLibApi? api,
    BaseHandler? handler,
    ExternalLibrary? externalLibrary,
  }) async {
    await instance.initImpl(
      api: api,
      handler: handler,
      externalLibrary: externalLibrary,
    );
  }

  /// Dispose flutter_rust_bridge
  ///
  /// The call to this function is optional, since flutter_rust_bridge (and everything else)
  /// is automatically disposed when the app stops.
  static void dispose() => instance.disposeImpl();

  @override
  ApiImplConstructor<RustLibApiImpl, RustLibWire> get apiImplConstructor =>
      RustLibApiImpl.new;

  @override
  WireConstructor<RustLibWire> get wireConstructor =>
      RustLibWire.fromExternalLibrary;

  @override
  Future<void> executeRustInitializers() async {}

  @override
  ExternalLibraryLoaderConfig get defaultExternalLibraryLoaderConfig =>
      kDefaultExternalLibraryLoaderConfig;

  @override
  String get codegenVersion => '2.0.0-dev.40';

  @override
  int get rustContentHash => -463493403;

  static const kDefaultExternalLibraryLoaderConfig =
      ExternalLibraryLoaderConfig(
    stem: 'rust_lib_aria',
    ioDirectory: 'rust/target/release/',
    webPrefix: 'pkg/',
  );
}

abstract class RustLibApi extends BaseApi {
  Future<void> crateApiAiscriptAiScriptAbort({required AiScript that});

  Future<void> crateApiAiscriptAiScriptExec(
      {required AiScript that, required String input});

  Future<AiScript> crateApiAiscriptAiScriptNew(
      {required FutureOr<String> Function(String) read,
      required FutureOr<void> Function(String) write,
      AsApiLib? api,
      AsUiLib? ui,
      AsPlayLib? play});

  AsApiLib crateApiAiscriptApiAsApiLibNew(
      {String? userId,
      String? userName,
      String? userUsername,
      required String customEmojis,
      required String locale,
      required String serverUrl,
      required FutureOr<void> Function(String, String, String) dialog,
      required FutureOr<bool> Function(String, String, String) confirm,
      String? token,
      required FutureOr<(String, String?)> Function(String, String, String?)
          api,
      required FutureOr<void> Function(String, String) save,
      required FutureOr<String> Function(String) load,
      required String url,
      required FutureOr<String> Function(String) nyaize});

  Future<void> crateApiAiscriptUiAsUiButtonCallbackCall(
      {required AsUiButtonCallback that});

  AsUiLib crateApiAiscriptUiAsUiLibNew(
      {required FutureOr<void> Function(String, AsUiComponent) onUpdate});

  Future<void> crateApiAiscriptUiAsUiMfmCallbackCall(
      {required AsUiMfmCallback that, required String value});

  Future<void> crateApiAiscriptUiAsUiNumberCallbackCall(
      {required AsUiNumberCallback that, required double value});

  Future<void> crateApiAiscriptUiAsUiSelectCallbackCall(
      {required AsUiSelectCallback that, required String value});

  Future<void> crateApiAiscriptUiAsUiSwitchCallbackCall(
      {required AsUiSwitchCallback that, required bool value});

  Future<void> crateApiAiscriptUiAsUiTextInputCallbackCall(
      {required AsUiTextInputCallback that, required String value});

  Future<void> crateApiAiscriptUiAsUiTextareaCallbackCall(
      {required AsUiTextareaCallback that, required String value});

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AiScript;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AiScript;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_AiScriptPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsApiLib;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsApiLib;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_AsApiLibPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiButtonCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiButtonCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiButtonCallbackPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_AsUiLib;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_AsUiLib;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_AsUiLibPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiMfmCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiMfmCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiMfmCallbackPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiNumberCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiNumberCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiNumberCallbackPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiSelectCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiSelectCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiSelectCallbackPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiSwitchCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiSwitchCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiSwitchCallbackPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiTextInputCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiTextInputCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiTextInputCallbackPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiTextareaCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiTextareaCallback;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_AsUiTextareaCallbackPtr;
}

class RustLibApiImpl extends RustLibApiImplPlatform implements RustLibApi {
  RustLibApiImpl({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @override
  Future<void> crateApiAiscriptAiScriptAbort({required AiScript that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 1, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAiscriptAiScriptAbortConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptAiScriptAbortConstMeta =>
      const TaskConstMeta(
        debugName: "AiScript_abort",
        argNames: ["that"],
      );

  @override
  Future<void> crateApiAiscriptAiScriptExec(
      {required AiScript that, required String input}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
            that, serializer);
        sse_encode_String(input, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 2, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptAiScriptExecConstMeta,
      argValues: [that, input],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptAiScriptExecConstMeta =>
      const TaskConstMeta(
        debugName: "AiScript_exec",
        argNames: ["that", "input"],
      );

  @override
  Future<AiScript> crateApiAiscriptAiScriptNew(
      {required FutureOr<String> Function(String) read,
      required FutureOr<void> Function(String) write,
      AsApiLib? api,
      AsUiLib? ui,
      AsPlayLib? play}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_DartFn_Inputs_String_Output_String_AnyhowException(
            read, serializer);
        sse_encode_DartFn_Inputs_String_Output_unit_AnyhowException(
            write, serializer);
        sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
            api, serializer);
        sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
            ui, serializer);
        sse_encode_opt_box_autoadd_as_play_lib(play, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 3, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAiscriptAiScriptNewConstMeta,
      argValues: [read, write, api, ui, play],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptAiScriptNewConstMeta =>
      const TaskConstMeta(
        debugName: "AiScript_new",
        argNames: ["read", "write", "api", "ui", "play"],
      );

  @override
  AsApiLib crateApiAiscriptApiAsApiLibNew(
      {String? userId,
      String? userName,
      String? userUsername,
      required String customEmojis,
      required String locale,
      required String serverUrl,
      required FutureOr<void> Function(String, String, String) dialog,
      required FutureOr<bool> Function(String, String, String) confirm,
      String? token,
      required FutureOr<(String, String?)> Function(String, String, String?)
          api,
      required FutureOr<void> Function(String, String) save,
      required FutureOr<String> Function(String) load,
      required String url,
      required FutureOr<String> Function(String) nyaize}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_opt_String(userId, serializer);
        sse_encode_opt_String(userName, serializer);
        sse_encode_opt_String(userUsername, serializer);
        sse_encode_String(customEmojis, serializer);
        sse_encode_String(locale, serializer);
        sse_encode_String(serverUrl, serializer);
        sse_encode_DartFn_Inputs_String_String_String_Output_unit_AnyhowException(
            dialog, serializer);
        sse_encode_DartFn_Inputs_String_String_String_Output_bool_AnyhowException(
            confirm, serializer);
        sse_encode_opt_String(token, serializer);
        sse_encode_DartFn_Inputs_String_String_opt_String_Output_record_string_opt_string_AnyhowException(
            api, serializer);
        sse_encode_DartFn_Inputs_String_String_Output_unit_AnyhowException(
            save, serializer);
        sse_encode_DartFn_Inputs_String_Output_String_AnyhowException(
            load, serializer);
        sse_encode_String(url, serializer);
        sse_encode_DartFn_Inputs_String_Output_String_AnyhowException(
            nyaize, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 4)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAiscriptApiAsApiLibNewConstMeta,
      argValues: [
        userId,
        userName,
        userUsername,
        customEmojis,
        locale,
        serverUrl,
        dialog,
        confirm,
        token,
        api,
        save,
        load,
        url,
        nyaize
      ],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptApiAsApiLibNewConstMeta =>
      const TaskConstMeta(
        debugName: "AsApiLib_new",
        argNames: [
          "userId",
          "userName",
          "userUsername",
          "customEmojis",
          "locale",
          "serverUrl",
          "dialog",
          "confirm",
          "token",
          "api",
          "save",
          "load",
          "url",
          "nyaize"
        ],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiButtonCallbackCall(
      {required AsUiButtonCallback that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 5, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiButtonCallbackCallConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiButtonCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiButtonCallback_call",
        argNames: ["that"],
      );

  @override
  AsUiLib crateApiAiscriptUiAsUiLibNew(
      {required FutureOr<void> Function(String, AsUiComponent) onUpdate}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_DartFn_Inputs_String_as_ui_component_Output_unit_AnyhowException(
            onUpdate, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 6)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiAiscriptUiAsUiLibNewConstMeta,
      argValues: [onUpdate],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiLibNewConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiLib_new",
        argNames: ["onUpdate"],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiMfmCallbackCall(
      {required AsUiMfmCallback that, required String value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
            that, serializer);
        sse_encode_String(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 7, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiMfmCallbackCallConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiMfmCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiMfmCallback_call",
        argNames: ["that", "value"],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiNumberCallbackCall(
      {required AsUiNumberCallback that, required double value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
            that, serializer);
        sse_encode_f_64(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 8, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiNumberCallbackCallConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiNumberCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiNumberCallback_call",
        argNames: ["that", "value"],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiSelectCallbackCall(
      {required AsUiSelectCallback that, required String value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
            that, serializer);
        sse_encode_String(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 9, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiSelectCallbackCallConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiSelectCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiSelectCallback_call",
        argNames: ["that", "value"],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiSwitchCallbackCall(
      {required AsUiSwitchCallback that, required bool value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
            that, serializer);
        sse_encode_bool(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 10, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiSwitchCallbackCallConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiSwitchCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiSwitchCallback_call",
        argNames: ["that", "value"],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiTextInputCallbackCall(
      {required AsUiTextInputCallback that, required String value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
            that, serializer);
        sse_encode_String(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 11, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiTextInputCallbackCallConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiTextInputCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiTextInputCallback_call",
        argNames: ["that", "value"],
      );

  @override
  Future<void> crateApiAiscriptUiAsUiTextareaCallbackCall(
      {required AsUiTextareaCallback that, required String value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
            that, serializer);
        sse_encode_String(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 12, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_String,
      ),
      constMeta: kCrateApiAiscriptUiAsUiTextareaCallbackCallConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiAiscriptUiAsUiTextareaCallbackCallConstMeta =>
      const TaskConstMeta(
        debugName: "AsUiTextareaCallback_call",
        argNames: ["that", "value"],
      );

  Future<void> Function(int, dynamic)
      encode_DartFn_Inputs_String_Output_String_AnyhowException(
          FutureOr<String> Function(String) raw) {
    return (callId, rawArg0) async {
      final arg0 = dco_decode_String(rawArg0);

      Box<String>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_String(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  Future<void> Function(int, dynamic)
      encode_DartFn_Inputs_String_Output_unit_AnyhowException(
          FutureOr<void> Function(String) raw) {
    return (callId, rawArg0) async {
      final arg0 = dco_decode_String(rawArg0);

      Box<void>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_unit(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  Future<void> Function(int, dynamic, dynamic)
      encode_DartFn_Inputs_String_String_Output_unit_AnyhowException(
          FutureOr<void> Function(String, String) raw) {
    return (callId, rawArg0, rawArg1) async {
      final arg0 = dco_decode_String(rawArg0);
      final arg1 = dco_decode_String(rawArg1);

      Box<void>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0, arg1));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_unit(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  Future<void> Function(int, dynamic, dynamic, dynamic)
      encode_DartFn_Inputs_String_String_String_Output_bool_AnyhowException(
          FutureOr<bool> Function(String, String, String) raw) {
    return (callId, rawArg0, rawArg1, rawArg2) async {
      final arg0 = dco_decode_String(rawArg0);
      final arg1 = dco_decode_String(rawArg1);
      final arg2 = dco_decode_String(rawArg2);

      Box<bool>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0, arg1, arg2));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_bool(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  Future<void> Function(int, dynamic, dynamic, dynamic)
      encode_DartFn_Inputs_String_String_String_Output_unit_AnyhowException(
          FutureOr<void> Function(String, String, String) raw) {
    return (callId, rawArg0, rawArg1, rawArg2) async {
      final arg0 = dco_decode_String(rawArg0);
      final arg1 = dco_decode_String(rawArg1);
      final arg2 = dco_decode_String(rawArg2);

      Box<void>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0, arg1, arg2));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_unit(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  Future<void> Function(int, dynamic, dynamic, dynamic)
      encode_DartFn_Inputs_String_String_opt_String_Output_record_string_opt_string_AnyhowException(
          FutureOr<(String, String?)> Function(String, String, String?) raw) {
    return (callId, rawArg0, rawArg1, rawArg2) async {
      final arg0 = dco_decode_String(rawArg0);
      final arg1 = dco_decode_String(rawArg1);
      final arg2 = dco_decode_opt_String(rawArg2);

      Box<(String, String?)>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0, arg1, arg2));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_record_string_opt_string(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  Future<void> Function(int, dynamic, dynamic)
      encode_DartFn_Inputs_String_as_ui_component_Output_unit_AnyhowException(
          FutureOr<void> Function(String, AsUiComponent) raw) {
    return (callId, rawArg0, rawArg1) async {
      final arg0 = dco_decode_String(rawArg0);
      final arg1 = dco_decode_as_ui_component(rawArg1);

      Box<void>? rawOutput;
      Box<AnyhowException>? rawError;
      try {
        rawOutput = Box(await raw(arg0, arg1));
      } catch (e, s) {
        rawError = Box(AnyhowException("$e\n\n$s"));
      }

      final serializer = SseSerializer(generalizedFrbRustBinding);
      assert((rawOutput != null) ^ (rawError != null));
      if (rawOutput != null) {
        serializer.buffer.putUint8(0);
        sse_encode_unit(rawOutput.value, serializer);
      } else {
        serializer.buffer.putUint8(1);
        sse_encode_AnyhowException(rawError!.value, serializer);
      }
      final output = serializer.intoRaw();

      generalizedFrbRustBinding.dartFnDeliverOutput(
          callId: callId,
          ptr: output.ptr,
          rustVecLen: output.rustVecLen,
          dataLen: output.dataLen);
    };
  }

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AiScript => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AiScript => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsApiLib => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsApiLib => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiButtonCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiButtonCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiLib => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiLib => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiMfmCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiMfmCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiNumberCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiNumberCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiSelectCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiSelectCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiSwitchCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiSwitchCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiTextInputCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiTextInputCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_AsUiTextareaCallback => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_AsUiTextareaCallback => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AnyhowException(raw as String);
  }

  @protected
  AiScript
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AiScriptImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsApiLib
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsApiLibImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiButtonCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiButtonCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiLib
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiLibImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiMfmCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiMfmCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiNumberCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiNumberCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiSelectCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiSelectCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiSwitchCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiSwitchCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiTextInputCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiTextInputCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiTextareaCallback
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiTextareaCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AiScript
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AiScriptImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiButtonCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiButtonCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiMfmCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiMfmCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiNumberCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiNumberCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiSelectCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiSelectCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiSwitchCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiSwitchCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiTextInputCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiTextInputCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiTextareaCallback
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiTextareaCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  FutureOr<String> Function(String)
      dco_decode_DartFn_Inputs_String_Output_String_AnyhowException(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  FutureOr<void> Function(String)
      dco_decode_DartFn_Inputs_String_Output_unit_AnyhowException(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  FutureOr<void> Function(String, String)
      dco_decode_DartFn_Inputs_String_String_Output_unit_AnyhowException(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  FutureOr<bool> Function(String, String, String)
      dco_decode_DartFn_Inputs_String_String_String_Output_bool_AnyhowException(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  FutureOr<void> Function(String, String, String)
      dco_decode_DartFn_Inputs_String_String_String_Output_unit_AnyhowException(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  FutureOr<(String, String?)> Function(String, String, String?)
      dco_decode_DartFn_Inputs_String_String_opt_String_Output_record_string_opt_string_AnyhowException(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  FutureOr<void> Function(String, AsUiComponent)
      dco_decode_DartFn_Inputs_String_as_ui_component_Output_unit_AnyhowException(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  Object dco_decode_DartOpaque(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return decodeDartOpaque(raw, generalizedFrbRustBinding);
  }

  @protected
  AiScript
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AiScriptImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsApiLib
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsApiLibImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiButtonCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiButtonCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiLib
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiLibImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiMfmCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiMfmCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiNumberCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiNumberCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiSelectCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiSelectCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiSwitchCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiSwitchCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiTextInputCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiTextInputCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  AsUiTextareaCallback
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AsUiTextareaCallbackImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  String dco_decode_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as String;
  }

  @protected
  AsPlayLib dco_decode_as_play_lib(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2)
      throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return AsPlayLib(
      thisId: dco_decode_String(arr[0]),
      thisUrl: dco_decode_String(arr[1]),
    );
  }

  @protected
  AsUiButton dco_decode_as_ui_button(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 5)
      throw Exception('unexpected arr length: expect 5 but see ${arr.length}');
    return AsUiButton(
      text: dco_decode_opt_String(arr[0]),
      onClick:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
              arr[1]),
      primary: dco_decode_opt_box_autoadd_bool(arr[2]),
      rounded: dco_decode_opt_box_autoadd_bool(arr[3]),
      disabled: dco_decode_opt_box_autoadd_bool(arr[4]),
    );
  }

  @protected
  AsUiButtons dco_decode_as_ui_buttons(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1)
      throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return AsUiButtons(
      buttons: dco_decode_opt_list_as_ui_button(arr[0]),
    );
  }

  @protected
  AsUiComponent dco_decode_as_ui_component(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    switch (raw[0]) {
      case 0:
        return AsUiComponent_Root(
          dco_decode_box_autoadd_as_ui_root(raw[1]),
        );
      case 1:
        return AsUiComponent_Container(
          dco_decode_box_autoadd_as_ui_container(raw[1]),
        );
      case 2:
        return AsUiComponent_Text(
          dco_decode_box_autoadd_as_ui_text(raw[1]),
        );
      case 3:
        return AsUiComponent_Mfm(
          dco_decode_box_autoadd_as_ui_mfm(raw[1]),
        );
      case 4:
        return AsUiComponent_Button(
          dco_decode_box_autoadd_as_ui_button(raw[1]),
        );
      case 5:
        return AsUiComponent_Buttons(
          dco_decode_box_autoadd_as_ui_buttons(raw[1]),
        );
      case 6:
        return AsUiComponent_ToggleSwitch(
          dco_decode_box_autoadd_as_ui_switch(raw[1]),
        );
      case 7:
        return AsUiComponent_Textarea(
          dco_decode_box_autoadd_as_ui_textarea(raw[1]),
        );
      case 8:
        return AsUiComponent_TextInput(
          dco_decode_box_autoadd_as_ui_text_input(raw[1]),
        );
      case 9:
        return AsUiComponent_NumberInput(
          dco_decode_box_autoadd_as_ui_number_input(raw[1]),
        );
      case 10:
        return AsUiComponent_Select(
          dco_decode_box_autoadd_as_ui_select(raw[1]),
        );
      case 11:
        return AsUiComponent_Folder(
          dco_decode_box_autoadd_as_ui_folder(raw[1]),
        );
      case 12:
        return AsUiComponent_PostFormButton(
          dco_decode_box_autoadd_as_ui_post_form_button(raw[1]),
        );
      case 13:
        return AsUiComponent_PostForm(
          dco_decode_box_autoadd_as_ui_post_form(raw[1]),
        );
      default:
        throw Exception("unreachable");
    }
  }

  @protected
  AsUiContainer dco_decode_as_ui_container(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 10)
      throw Exception('unexpected arr length: expect 10 but see ${arr.length}');
    return AsUiContainer(
      children: dco_decode_opt_list_String(arr[0]),
      align: dco_decode_opt_String(arr[1]),
      bgColor: dco_decode_opt_String(arr[2]),
      fgColor: dco_decode_opt_String(arr[3]),
      font: dco_decode_opt_String(arr[4]),
      borderWidth: dco_decode_opt_box_autoadd_f_64(arr[5]),
      borderColor: dco_decode_opt_String(arr[6]),
      padding: dco_decode_opt_box_autoadd_f_64(arr[7]),
      rounded: dco_decode_opt_box_autoadd_bool(arr[8]),
      hidden: dco_decode_opt_box_autoadd_bool(arr[9]),
    );
  }

  @protected
  AsUiFolder dco_decode_as_ui_folder(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 3)
      throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return AsUiFolder(
      children: dco_decode_opt_list_String(arr[0]),
      title: dco_decode_opt_String(arr[1]),
      opened: dco_decode_opt_box_autoadd_bool(arr[2]),
    );
  }

  @protected
  AsUiMfm dco_decode_as_ui_mfm(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 6)
      throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return AsUiMfm(
      text: dco_decode_opt_String(arr[0]),
      size: dco_decode_opt_box_autoadd_f_64(arr[1]),
      bold: dco_decode_opt_box_autoadd_bool(arr[2]),
      color: dco_decode_opt_String(arr[3]),
      font: dco_decode_opt_String(arr[4]),
      onClickEv:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
              arr[5]),
    );
  }

  @protected
  AsUiNumberInput dco_decode_as_ui_number_input(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return AsUiNumberInput(
      onInput:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
              arr[0]),
      defaultValue: dco_decode_opt_box_autoadd_f_64(arr[1]),
      label: dco_decode_opt_String(arr[2]),
      caption: dco_decode_opt_String(arr[3]),
    );
  }

  @protected
  AsUiPostForm dco_decode_as_ui_post_form(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1)
      throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return AsUiPostForm(
      form: dco_decode_opt_box_autoadd_post_form_props_for_as_ui(arr[0]),
    );
  }

  @protected
  AsUiPostFormButton dco_decode_as_ui_post_form_button(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return AsUiPostFormButton(
      text: dco_decode_opt_String(arr[0]),
      primary: dco_decode_opt_box_autoadd_bool(arr[1]),
      rounded: dco_decode_opt_box_autoadd_bool(arr[2]),
      form: dco_decode_opt_box_autoadd_post_form_props_for_as_ui(arr[3]),
    );
  }

  @protected
  AsUiRoot dco_decode_as_ui_root(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1)
      throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return AsUiRoot(
      children: dco_decode_list_String(arr[0]),
    );
  }

  @protected
  AsUiSelect dco_decode_as_ui_select(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 5)
      throw Exception('unexpected arr length: expect 5 but see ${arr.length}');
    return AsUiSelect(
      items: dco_decode_opt_list_record_string_string(arr[0]),
      onChange:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
              arr[1]),
      defaultValue: dco_decode_opt_String(arr[2]),
      label: dco_decode_opt_String(arr[3]),
      caption: dco_decode_opt_String(arr[4]),
    );
  }

  @protected
  AsUiSwitch dco_decode_as_ui_switch(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return AsUiSwitch(
      onChange:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
              arr[0]),
      defaultValue: dco_decode_opt_box_autoadd_bool(arr[1]),
      label: dco_decode_opt_String(arr[2]),
      caption: dco_decode_opt_String(arr[3]),
    );
  }

  @protected
  AsUiText dco_decode_as_ui_text(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 5)
      throw Exception('unexpected arr length: expect 5 but see ${arr.length}');
    return AsUiText(
      text: dco_decode_opt_String(arr[0]),
      size: dco_decode_opt_box_autoadd_f_64(arr[1]),
      bold: dco_decode_opt_box_autoadd_bool(arr[2]),
      color: dco_decode_opt_String(arr[3]),
      font: dco_decode_opt_String(arr[4]),
    );
  }

  @protected
  AsUiTextInput dco_decode_as_ui_text_input(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return AsUiTextInput(
      onInput:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
              arr[0]),
      defaultValue: dco_decode_opt_String(arr[1]),
      label: dco_decode_opt_String(arr[2]),
      caption: dco_decode_opt_String(arr[3]),
    );
  }

  @protected
  AsUiTextarea dco_decode_as_ui_textarea(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return AsUiTextarea(
      onInput:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
              arr[0]),
      defaultValue: dco_decode_opt_String(arr[1]),
      label: dco_decode_opt_String(arr[2]),
      caption: dco_decode_opt_String(arr[3]),
    );
  }

  @protected
  bool dco_decode_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  AsApiLib
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
        raw);
  }

  @protected
  AsUiButtonCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
        raw);
  }

  @protected
  AsUiLib
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
        raw);
  }

  @protected
  AsUiMfmCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
        raw);
  }

  @protected
  AsUiNumberCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
        raw);
  }

  @protected
  AsUiSelectCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
        raw);
  }

  @protected
  AsUiSwitchCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
        raw);
  }

  @protected
  AsUiTextInputCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
        raw);
  }

  @protected
  AsUiTextareaCallback
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
        raw);
  }

  @protected
  AsPlayLib dco_decode_box_autoadd_as_play_lib(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_play_lib(raw);
  }

  @protected
  AsUiButton dco_decode_box_autoadd_as_ui_button(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_button(raw);
  }

  @protected
  AsUiButtons dco_decode_box_autoadd_as_ui_buttons(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_buttons(raw);
  }

  @protected
  AsUiContainer dco_decode_box_autoadd_as_ui_container(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_container(raw);
  }

  @protected
  AsUiFolder dco_decode_box_autoadd_as_ui_folder(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_folder(raw);
  }

  @protected
  AsUiMfm dco_decode_box_autoadd_as_ui_mfm(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_mfm(raw);
  }

  @protected
  AsUiNumberInput dco_decode_box_autoadd_as_ui_number_input(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_number_input(raw);
  }

  @protected
  AsUiPostForm dco_decode_box_autoadd_as_ui_post_form(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_post_form(raw);
  }

  @protected
  AsUiPostFormButton dco_decode_box_autoadd_as_ui_post_form_button(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_post_form_button(raw);
  }

  @protected
  AsUiRoot dco_decode_box_autoadd_as_ui_root(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_root(raw);
  }

  @protected
  AsUiSelect dco_decode_box_autoadd_as_ui_select(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_select(raw);
  }

  @protected
  AsUiSwitch dco_decode_box_autoadd_as_ui_switch(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_switch(raw);
  }

  @protected
  AsUiText dco_decode_box_autoadd_as_ui_text(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_text(raw);
  }

  @protected
  AsUiTextInput dco_decode_box_autoadd_as_ui_text_input(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_text_input(raw);
  }

  @protected
  AsUiTextarea dco_decode_box_autoadd_as_ui_textarea(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_as_ui_textarea(raw);
  }

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as double;
  }

  @protected
  PostFormPropsForAsUi dco_decode_box_autoadd_post_form_props_for_as_ui(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_post_form_props_for_as_ui(raw);
  }

  @protected
  double dco_decode_f_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as double;
  }

  @protected
  List<String> dco_decode_list_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_String).toList();
  }

  @protected
  List<AsUiButton> dco_decode_list_as_ui_button(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_as_ui_button).toList();
  }

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Uint8List;
  }

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_record_string_string).toList();
  }

  @protected
  String? dco_decode_opt_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_String(raw);
  }

  @protected
  AsApiLib?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
            raw);
  }

  @protected
  AsUiButtonCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
            raw);
  }

  @protected
  AsUiLib?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
            raw);
  }

  @protected
  AsUiMfmCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
            raw);
  }

  @protected
  AsUiNumberCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
            raw);
  }

  @protected
  AsUiSelectCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
            raw);
  }

  @protected
  AsUiSwitchCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
            raw);
  }

  @protected
  AsUiTextInputCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
            raw);
  }

  @protected
  AsUiTextareaCallback?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
            raw);
  }

  @protected
  AsPlayLib? dco_decode_opt_box_autoadd_as_play_lib(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_as_play_lib(raw);
  }

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_bool(raw);
  }

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_f_64(raw);
  }

  @protected
  PostFormPropsForAsUi? dco_decode_opt_box_autoadd_post_form_props_for_as_ui(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_post_form_props_for_as_ui(raw);
  }

  @protected
  List<String>? dco_decode_opt_list_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_list_String(raw);
  }

  @protected
  List<AsUiButton>? dco_decode_opt_list_as_ui_button(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_list_as_ui_button(raw);
  }

  @protected
  List<(String, String)>? dco_decode_opt_list_record_string_string(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_list_record_string_string(raw);
  }

  @protected
  PostFormPropsForAsUi dco_decode_post_form_props_for_as_ui(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return PostFormPropsForAsUi(
      text: dco_decode_String(arr[0]),
      cw: dco_decode_opt_String(arr[1]),
      visibility: dco_decode_opt_String(arr[2]),
      localOnly: dco_decode_opt_box_autoadd_bool(arr[3]),
    );
  }

  @protected
  (String, String?) dco_decode_record_string_opt_string(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_String(arr[0]),
      dco_decode_opt_String(arr[1]),
    );
  }

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_String(arr[0]),
      dco_decode_String(arr[1]),
    );
  }

  @protected
  int dco_decode_u_8(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  void dco_decode_unit(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return;
  }

  @protected
  BigInt dco_decode_usize(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return AnyhowException(inner);
  }

  @protected
  AiScript
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AiScriptImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsApiLib
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsApiLibImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiButtonCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiButtonCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiLib
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiLibImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiMfmCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiMfmCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiNumberCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiNumberCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiSelectCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiSelectCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiSwitchCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiSwitchCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiTextInputCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiTextInputCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiTextareaCallback
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiTextareaCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AiScript
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AiScriptImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiButtonCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiButtonCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiMfmCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiMfmCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiNumberCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiNumberCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiSelectCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiSelectCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiSwitchCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiSwitchCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiTextInputCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiTextInputCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiTextareaCallback
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiTextareaCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_usize(deserializer);
    return decodeDartOpaque(inner, generalizedFrbRustBinding);
  }

  @protected
  AiScript
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AiScriptImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsApiLib
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsApiLibImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiButtonCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiButtonCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiLib
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiLibImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiMfmCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiMfmCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiNumberCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiNumberCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiSelectCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiSelectCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiSwitchCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiSwitchCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiTextInputCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiTextInputCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  AsUiTextareaCallback
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AsUiTextareaCallbackImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  String sse_decode_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_prim_u_8_strict(deserializer);
    return utf8.decoder.convert(inner);
  }

  @protected
  AsPlayLib sse_decode_as_play_lib(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_thisId = sse_decode_String(deserializer);
    var var_thisUrl = sse_decode_String(deserializer);
    return AsPlayLib(thisId: var_thisId, thisUrl: var_thisUrl);
  }

  @protected
  AsUiButton sse_decode_as_ui_button(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_text = sse_decode_opt_String(deserializer);
    var var_onClick =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
            deserializer);
    var var_primary = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_rounded = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_disabled = sse_decode_opt_box_autoadd_bool(deserializer);
    return AsUiButton(
        text: var_text,
        onClick: var_onClick,
        primary: var_primary,
        rounded: var_rounded,
        disabled: var_disabled);
  }

  @protected
  AsUiButtons sse_decode_as_ui_buttons(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_buttons = sse_decode_opt_list_as_ui_button(deserializer);
    return AsUiButtons(buttons: var_buttons);
  }

  @protected
  AsUiComponent sse_decode_as_ui_component(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var tag_ = sse_decode_i_32(deserializer);
    switch (tag_) {
      case 0:
        var var_field0 = sse_decode_box_autoadd_as_ui_root(deserializer);
        return AsUiComponent_Root(var_field0);
      case 1:
        var var_field0 = sse_decode_box_autoadd_as_ui_container(deserializer);
        return AsUiComponent_Container(var_field0);
      case 2:
        var var_field0 = sse_decode_box_autoadd_as_ui_text(deserializer);
        return AsUiComponent_Text(var_field0);
      case 3:
        var var_field0 = sse_decode_box_autoadd_as_ui_mfm(deserializer);
        return AsUiComponent_Mfm(var_field0);
      case 4:
        var var_field0 = sse_decode_box_autoadd_as_ui_button(deserializer);
        return AsUiComponent_Button(var_field0);
      case 5:
        var var_field0 = sse_decode_box_autoadd_as_ui_buttons(deserializer);
        return AsUiComponent_Buttons(var_field0);
      case 6:
        var var_field0 = sse_decode_box_autoadd_as_ui_switch(deserializer);
        return AsUiComponent_ToggleSwitch(var_field0);
      case 7:
        var var_field0 = sse_decode_box_autoadd_as_ui_textarea(deserializer);
        return AsUiComponent_Textarea(var_field0);
      case 8:
        var var_field0 = sse_decode_box_autoadd_as_ui_text_input(deserializer);
        return AsUiComponent_TextInput(var_field0);
      case 9:
        var var_field0 =
            sse_decode_box_autoadd_as_ui_number_input(deserializer);
        return AsUiComponent_NumberInput(var_field0);
      case 10:
        var var_field0 = sse_decode_box_autoadd_as_ui_select(deserializer);
        return AsUiComponent_Select(var_field0);
      case 11:
        var var_field0 = sse_decode_box_autoadd_as_ui_folder(deserializer);
        return AsUiComponent_Folder(var_field0);
      case 12:
        var var_field0 =
            sse_decode_box_autoadd_as_ui_post_form_button(deserializer);
        return AsUiComponent_PostFormButton(var_field0);
      case 13:
        var var_field0 = sse_decode_box_autoadd_as_ui_post_form(deserializer);
        return AsUiComponent_PostForm(var_field0);
      default:
        throw UnimplementedError('');
    }
  }

  @protected
  AsUiContainer sse_decode_as_ui_container(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_children = sse_decode_opt_list_String(deserializer);
    var var_align = sse_decode_opt_String(deserializer);
    var var_bgColor = sse_decode_opt_String(deserializer);
    var var_fgColor = sse_decode_opt_String(deserializer);
    var var_font = sse_decode_opt_String(deserializer);
    var var_borderWidth = sse_decode_opt_box_autoadd_f_64(deserializer);
    var var_borderColor = sse_decode_opt_String(deserializer);
    var var_padding = sse_decode_opt_box_autoadd_f_64(deserializer);
    var var_rounded = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_hidden = sse_decode_opt_box_autoadd_bool(deserializer);
    return AsUiContainer(
        children: var_children,
        align: var_align,
        bgColor: var_bgColor,
        fgColor: var_fgColor,
        font: var_font,
        borderWidth: var_borderWidth,
        borderColor: var_borderColor,
        padding: var_padding,
        rounded: var_rounded,
        hidden: var_hidden);
  }

  @protected
  AsUiFolder sse_decode_as_ui_folder(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_children = sse_decode_opt_list_String(deserializer);
    var var_title = sse_decode_opt_String(deserializer);
    var var_opened = sse_decode_opt_box_autoadd_bool(deserializer);
    return AsUiFolder(
        children: var_children, title: var_title, opened: var_opened);
  }

  @protected
  AsUiMfm sse_decode_as_ui_mfm(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_text = sse_decode_opt_String(deserializer);
    var var_size = sse_decode_opt_box_autoadd_f_64(deserializer);
    var var_bold = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_color = sse_decode_opt_String(deserializer);
    var var_font = sse_decode_opt_String(deserializer);
    var var_onClickEv =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
            deserializer);
    return AsUiMfm(
        text: var_text,
        size: var_size,
        bold: var_bold,
        color: var_color,
        font: var_font,
        onClickEv: var_onClickEv);
  }

  @protected
  AsUiNumberInput sse_decode_as_ui_number_input(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_onInput =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
            deserializer);
    var var_defaultValue = sse_decode_opt_box_autoadd_f_64(deserializer);
    var var_label = sse_decode_opt_String(deserializer);
    var var_caption = sse_decode_opt_String(deserializer);
    return AsUiNumberInput(
        onInput: var_onInput,
        defaultValue: var_defaultValue,
        label: var_label,
        caption: var_caption);
  }

  @protected
  AsUiPostForm sse_decode_as_ui_post_form(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_form =
        sse_decode_opt_box_autoadd_post_form_props_for_as_ui(deserializer);
    return AsUiPostForm(form: var_form);
  }

  @protected
  AsUiPostFormButton sse_decode_as_ui_post_form_button(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_text = sse_decode_opt_String(deserializer);
    var var_primary = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_rounded = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_form =
        sse_decode_opt_box_autoadd_post_form_props_for_as_ui(deserializer);
    return AsUiPostFormButton(
        text: var_text,
        primary: var_primary,
        rounded: var_rounded,
        form: var_form);
  }

  @protected
  AsUiRoot sse_decode_as_ui_root(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_children = sse_decode_list_String(deserializer);
    return AsUiRoot(children: var_children);
  }

  @protected
  AsUiSelect sse_decode_as_ui_select(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_items = sse_decode_opt_list_record_string_string(deserializer);
    var var_onChange =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
            deserializer);
    var var_defaultValue = sse_decode_opt_String(deserializer);
    var var_label = sse_decode_opt_String(deserializer);
    var var_caption = sse_decode_opt_String(deserializer);
    return AsUiSelect(
        items: var_items,
        onChange: var_onChange,
        defaultValue: var_defaultValue,
        label: var_label,
        caption: var_caption);
  }

  @protected
  AsUiSwitch sse_decode_as_ui_switch(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_onChange =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
            deserializer);
    var var_defaultValue = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_label = sse_decode_opt_String(deserializer);
    var var_caption = sse_decode_opt_String(deserializer);
    return AsUiSwitch(
        onChange: var_onChange,
        defaultValue: var_defaultValue,
        label: var_label,
        caption: var_caption);
  }

  @protected
  AsUiText sse_decode_as_ui_text(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_text = sse_decode_opt_String(deserializer);
    var var_size = sse_decode_opt_box_autoadd_f_64(deserializer);
    var var_bold = sse_decode_opt_box_autoadd_bool(deserializer);
    var var_color = sse_decode_opt_String(deserializer);
    var var_font = sse_decode_opt_String(deserializer);
    return AsUiText(
        text: var_text,
        size: var_size,
        bold: var_bold,
        color: var_color,
        font: var_font);
  }

  @protected
  AsUiTextInput sse_decode_as_ui_text_input(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_onInput =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
            deserializer);
    var var_defaultValue = sse_decode_opt_String(deserializer);
    var var_label = sse_decode_opt_String(deserializer);
    var var_caption = sse_decode_opt_String(deserializer);
    return AsUiTextInput(
        onInput: var_onInput,
        defaultValue: var_defaultValue,
        label: var_label,
        caption: var_caption);
  }

  @protected
  AsUiTextarea sse_decode_as_ui_textarea(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_onInput =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
            deserializer);
    var var_defaultValue = sse_decode_opt_String(deserializer);
    var var_label = sse_decode_opt_String(deserializer);
    var var_caption = sse_decode_opt_String(deserializer);
    return AsUiTextarea(
        onInput: var_onInput,
        defaultValue: var_defaultValue,
        label: var_label,
        caption: var_caption);
  }

  @protected
  bool sse_decode_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8() != 0;
  }

  @protected
  AsApiLib
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
        deserializer));
  }

  @protected
  AsUiButtonCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
        deserializer));
  }

  @protected
  AsUiLib
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
        deserializer));
  }

  @protected
  AsUiMfmCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
        deserializer));
  }

  @protected
  AsUiNumberCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
        deserializer));
  }

  @protected
  AsUiSelectCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
        deserializer));
  }

  @protected
  AsUiSwitchCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
        deserializer));
  }

  @protected
  AsUiTextInputCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
        deserializer));
  }

  @protected
  AsUiTextareaCallback
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
        deserializer));
  }

  @protected
  AsPlayLib sse_decode_box_autoadd_as_play_lib(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_play_lib(deserializer));
  }

  @protected
  AsUiButton sse_decode_box_autoadd_as_ui_button(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_button(deserializer));
  }

  @protected
  AsUiButtons sse_decode_box_autoadd_as_ui_buttons(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_buttons(deserializer));
  }

  @protected
  AsUiContainer sse_decode_box_autoadd_as_ui_container(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_container(deserializer));
  }

  @protected
  AsUiFolder sse_decode_box_autoadd_as_ui_folder(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_folder(deserializer));
  }

  @protected
  AsUiMfm sse_decode_box_autoadd_as_ui_mfm(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_mfm(deserializer));
  }

  @protected
  AsUiNumberInput sse_decode_box_autoadd_as_ui_number_input(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_number_input(deserializer));
  }

  @protected
  AsUiPostForm sse_decode_box_autoadd_as_ui_post_form(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_post_form(deserializer));
  }

  @protected
  AsUiPostFormButton sse_decode_box_autoadd_as_ui_post_form_button(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_post_form_button(deserializer));
  }

  @protected
  AsUiRoot sse_decode_box_autoadd_as_ui_root(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_root(deserializer));
  }

  @protected
  AsUiSelect sse_decode_box_autoadd_as_ui_select(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_select(deserializer));
  }

  @protected
  AsUiSwitch sse_decode_box_autoadd_as_ui_switch(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_switch(deserializer));
  }

  @protected
  AsUiText sse_decode_box_autoadd_as_ui_text(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_text(deserializer));
  }

  @protected
  AsUiTextInput sse_decode_box_autoadd_as_ui_text_input(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_text_input(deserializer));
  }

  @protected
  AsUiTextarea sse_decode_box_autoadd_as_ui_textarea(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_as_ui_textarea(deserializer));
  }

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_bool(deserializer));
  }

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_f_64(deserializer));
  }

  @protected
  PostFormPropsForAsUi sse_decode_box_autoadd_post_form_props_for_as_ui(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_post_form_props_for_as_ui(deserializer));
  }

  @protected
  double sse_decode_f_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getFloat64();
  }

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <String>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_String(deserializer));
    }
    return ans_;
  }

  @protected
  List<AsUiButton> sse_decode_list_as_ui_button(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <AsUiButton>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_as_ui_button(deserializer));
    }
    return ans_;
  }

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var len_ = sse_decode_i_32(deserializer);
    return deserializer.buffer.getUint8List(len_);
  }

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, String)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_record_string_string(deserializer));
    }
    return ans_;
  }

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_String(deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsApiLib?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiButtonCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiLib?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiMfmCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiNumberCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiSelectCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiSwitchCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiTextInputCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsUiTextareaCallback?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  AsPlayLib? sse_decode_opt_box_autoadd_as_play_lib(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_as_play_lib(deserializer));
    } else {
      return null;
    }
  }

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_bool(deserializer));
    } else {
      return null;
    }
  }

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_f_64(deserializer));
    } else {
      return null;
    }
  }

  @protected
  PostFormPropsForAsUi? sse_decode_opt_box_autoadd_post_form_props_for_as_ui(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_post_form_props_for_as_ui(deserializer));
    } else {
      return null;
    }
  }

  @protected
  List<String>? sse_decode_opt_list_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_list_String(deserializer));
    } else {
      return null;
    }
  }

  @protected
  List<AsUiButton>? sse_decode_opt_list_as_ui_button(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_list_as_ui_button(deserializer));
    } else {
      return null;
    }
  }

  @protected
  List<(String, String)>? sse_decode_opt_list_record_string_string(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_list_record_string_string(deserializer));
    } else {
      return null;
    }
  }

  @protected
  PostFormPropsForAsUi sse_decode_post_form_props_for_as_ui(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_text = sse_decode_String(deserializer);
    var var_cw = sse_decode_opt_String(deserializer);
    var var_visibility = sse_decode_opt_String(deserializer);
    var var_localOnly = sse_decode_opt_box_autoadd_bool(deserializer);
    return PostFormPropsForAsUi(
        text: var_text,
        cw: var_cw,
        visibility: var_visibility,
        localOnly: var_localOnly);
  }

  @protected
  (String, String?) sse_decode_record_string_opt_string(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 = sse_decode_opt_String(deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 = sse_decode_String(deserializer);
    return (var_field0, var_field1);
  }

  @protected
  int sse_decode_u_8(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8();
  }

  @protected
  void sse_decode_unit(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  int sse_decode_i_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getInt32();
  }

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.message, serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          AiScript self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AiScriptImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          AsApiLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsApiLibImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          AsUiButtonCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiButtonCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          AsUiLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiLibImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          AsUiMfmCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiMfmCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          AsUiNumberCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiNumberCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          AsUiSelectCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiSelectCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          AsUiSwitchCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiSwitchCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          AsUiTextInputCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiTextInputCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          AsUiTextareaCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiTextareaCallbackImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          AiScript self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AiScriptImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          AsUiButtonCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiButtonCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          AsUiMfmCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiMfmCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          AsUiNumberCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiNumberCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          AsUiSelectCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiSelectCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          AsUiSwitchCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiSwitchCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          AsUiTextInputCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiTextInputCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          AsUiTextareaCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiTextareaCallbackImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void sse_encode_DartFn_Inputs_String_Output_String_AnyhowException(
      FutureOr<String> Function(String) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_Output_String_AnyhowException(self),
        serializer);
  }

  @protected
  void sse_encode_DartFn_Inputs_String_Output_unit_AnyhowException(
      FutureOr<void> Function(String) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_Output_unit_AnyhowException(self),
        serializer);
  }

  @protected
  void sse_encode_DartFn_Inputs_String_String_Output_unit_AnyhowException(
      FutureOr<void> Function(String, String) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_String_Output_unit_AnyhowException(self),
        serializer);
  }

  @protected
  void
      sse_encode_DartFn_Inputs_String_String_String_Output_bool_AnyhowException(
          FutureOr<bool> Function(String, String, String) self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_String_String_Output_bool_AnyhowException(
            self),
        serializer);
  }

  @protected
  void
      sse_encode_DartFn_Inputs_String_String_String_Output_unit_AnyhowException(
          FutureOr<void> Function(String, String, String) self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_String_String_Output_unit_AnyhowException(
            self),
        serializer);
  }

  @protected
  void
      sse_encode_DartFn_Inputs_String_String_opt_String_Output_record_string_opt_string_AnyhowException(
          FutureOr<(String, String?)> Function(String, String, String?) self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_String_opt_String_Output_record_string_opt_string_AnyhowException(
            self),
        serializer);
  }

  @protected
  void
      sse_encode_DartFn_Inputs_String_as_ui_component_Output_unit_AnyhowException(
          FutureOr<void> Function(String, AsUiComponent) self,
          SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DartOpaque(
        encode_DartFn_Inputs_String_as_ui_component_Output_unit_AnyhowException(
            self),
        serializer);
  }

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        BigInt.from(PlatformPointerUtil.ptrToInt(encodeDartOpaque(
                self, portManager.dartHandlerPort, generalizedFrbRustBinding)))
            .toUnsigned(64),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAiScript(
          AiScript self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AiScriptImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          AsApiLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsApiLibImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          AsUiButtonCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiButtonCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          AsUiLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiLibImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          AsUiMfmCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiMfmCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          AsUiNumberCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiNumberCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          AsUiSelectCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiSelectCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          AsUiSwitchCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiSwitchCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          AsUiTextInputCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiTextInputCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          AsUiTextareaCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AsUiTextareaCallbackImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void sse_encode_String(String self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_prim_u_8_strict(utf8.encoder.convert(self), serializer);
  }

  @protected
  void sse_encode_as_play_lib(AsPlayLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.thisId, serializer);
    sse_encode_String(self.thisUrl, serializer);
  }

  @protected
  void sse_encode_as_ui_button(AsUiButton self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.text, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
        self.onClick, serializer);
    sse_encode_opt_box_autoadd_bool(self.primary, serializer);
    sse_encode_opt_box_autoadd_bool(self.rounded, serializer);
    sse_encode_opt_box_autoadd_bool(self.disabled, serializer);
  }

  @protected
  void sse_encode_as_ui_buttons(AsUiButtons self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_list_as_ui_button(self.buttons, serializer);
  }

  @protected
  void sse_encode_as_ui_component(
      AsUiComponent self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    switch (self) {
      case AsUiComponent_Root(field0: final field0):
        sse_encode_i_32(0, serializer);
        sse_encode_box_autoadd_as_ui_root(field0, serializer);
      case AsUiComponent_Container(field0: final field0):
        sse_encode_i_32(1, serializer);
        sse_encode_box_autoadd_as_ui_container(field0, serializer);
      case AsUiComponent_Text(field0: final field0):
        sse_encode_i_32(2, serializer);
        sse_encode_box_autoadd_as_ui_text(field0, serializer);
      case AsUiComponent_Mfm(field0: final field0):
        sse_encode_i_32(3, serializer);
        sse_encode_box_autoadd_as_ui_mfm(field0, serializer);
      case AsUiComponent_Button(field0: final field0):
        sse_encode_i_32(4, serializer);
        sse_encode_box_autoadd_as_ui_button(field0, serializer);
      case AsUiComponent_Buttons(field0: final field0):
        sse_encode_i_32(5, serializer);
        sse_encode_box_autoadd_as_ui_buttons(field0, serializer);
      case AsUiComponent_ToggleSwitch(field0: final field0):
        sse_encode_i_32(6, serializer);
        sse_encode_box_autoadd_as_ui_switch(field0, serializer);
      case AsUiComponent_Textarea(field0: final field0):
        sse_encode_i_32(7, serializer);
        sse_encode_box_autoadd_as_ui_textarea(field0, serializer);
      case AsUiComponent_TextInput(field0: final field0):
        sse_encode_i_32(8, serializer);
        sse_encode_box_autoadd_as_ui_text_input(field0, serializer);
      case AsUiComponent_NumberInput(field0: final field0):
        sse_encode_i_32(9, serializer);
        sse_encode_box_autoadd_as_ui_number_input(field0, serializer);
      case AsUiComponent_Select(field0: final field0):
        sse_encode_i_32(10, serializer);
        sse_encode_box_autoadd_as_ui_select(field0, serializer);
      case AsUiComponent_Folder(field0: final field0):
        sse_encode_i_32(11, serializer);
        sse_encode_box_autoadd_as_ui_folder(field0, serializer);
      case AsUiComponent_PostFormButton(field0: final field0):
        sse_encode_i_32(12, serializer);
        sse_encode_box_autoadd_as_ui_post_form_button(field0, serializer);
      case AsUiComponent_PostForm(field0: final field0):
        sse_encode_i_32(13, serializer);
        sse_encode_box_autoadd_as_ui_post_form(field0, serializer);
      default:
        throw UnimplementedError('');
    }
  }

  @protected
  void sse_encode_as_ui_container(
      AsUiContainer self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_list_String(self.children, serializer);
    sse_encode_opt_String(self.align, serializer);
    sse_encode_opt_String(self.bgColor, serializer);
    sse_encode_opt_String(self.fgColor, serializer);
    sse_encode_opt_String(self.font, serializer);
    sse_encode_opt_box_autoadd_f_64(self.borderWidth, serializer);
    sse_encode_opt_String(self.borderColor, serializer);
    sse_encode_opt_box_autoadd_f_64(self.padding, serializer);
    sse_encode_opt_box_autoadd_bool(self.rounded, serializer);
    sse_encode_opt_box_autoadd_bool(self.hidden, serializer);
  }

  @protected
  void sse_encode_as_ui_folder(AsUiFolder self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_list_String(self.children, serializer);
    sse_encode_opt_String(self.title, serializer);
    sse_encode_opt_box_autoadd_bool(self.opened, serializer);
  }

  @protected
  void sse_encode_as_ui_mfm(AsUiMfm self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.text, serializer);
    sse_encode_opt_box_autoadd_f_64(self.size, serializer);
    sse_encode_opt_box_autoadd_bool(self.bold, serializer);
    sse_encode_opt_String(self.color, serializer);
    sse_encode_opt_String(self.font, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
        self.onClickEv, serializer);
  }

  @protected
  void sse_encode_as_ui_number_input(
      AsUiNumberInput self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
        self.onInput, serializer);
    sse_encode_opt_box_autoadd_f_64(self.defaultValue, serializer);
    sse_encode_opt_String(self.label, serializer);
    sse_encode_opt_String(self.caption, serializer);
  }

  @protected
  void sse_encode_as_ui_post_form(AsUiPostForm self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_post_form_props_for_as_ui(self.form, serializer);
  }

  @protected
  void sse_encode_as_ui_post_form_button(
      AsUiPostFormButton self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.text, serializer);
    sse_encode_opt_box_autoadd_bool(self.primary, serializer);
    sse_encode_opt_box_autoadd_bool(self.rounded, serializer);
    sse_encode_opt_box_autoadd_post_form_props_for_as_ui(self.form, serializer);
  }

  @protected
  void sse_encode_as_ui_root(AsUiRoot self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_String(self.children, serializer);
  }

  @protected
  void sse_encode_as_ui_select(AsUiSelect self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_list_record_string_string(self.items, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
        self.onChange, serializer);
    sse_encode_opt_String(self.defaultValue, serializer);
    sse_encode_opt_String(self.label, serializer);
    sse_encode_opt_String(self.caption, serializer);
  }

  @protected
  void sse_encode_as_ui_switch(AsUiSwitch self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
        self.onChange, serializer);
    sse_encode_opt_box_autoadd_bool(self.defaultValue, serializer);
    sse_encode_opt_String(self.label, serializer);
    sse_encode_opt_String(self.caption, serializer);
  }

  @protected
  void sse_encode_as_ui_text(AsUiText self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.text, serializer);
    sse_encode_opt_box_autoadd_f_64(self.size, serializer);
    sse_encode_opt_box_autoadd_bool(self.bold, serializer);
    sse_encode_opt_String(self.color, serializer);
    sse_encode_opt_String(self.font, serializer);
  }

  @protected
  void sse_encode_as_ui_text_input(
      AsUiTextInput self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
        self.onInput, serializer);
    sse_encode_opt_String(self.defaultValue, serializer);
    sse_encode_opt_String(self.label, serializer);
    sse_encode_opt_String(self.caption, serializer);
  }

  @protected
  void sse_encode_as_ui_textarea(AsUiTextarea self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
        self.onInput, serializer);
    sse_encode_opt_String(self.defaultValue, serializer);
    sse_encode_opt_String(self.label, serializer);
    sse_encode_opt_String(self.caption, serializer);
  }

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self ? 1 : 0);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          AsApiLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          AsUiButtonCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          AsUiLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          AsUiMfmCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          AsUiNumberCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          AsUiSelectCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          AsUiSwitchCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          AsUiTextInputCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          AsUiTextareaCallback self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
        self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_play_lib(
      AsPlayLib self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_play_lib(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_button(
      AsUiButton self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_button(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_buttons(
      AsUiButtons self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_buttons(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_container(
      AsUiContainer self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_container(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_folder(
      AsUiFolder self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_folder(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_mfm(
      AsUiMfm self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_mfm(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_number_input(
      AsUiNumberInput self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_number_input(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_post_form(
      AsUiPostForm self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_post_form(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_post_form_button(
      AsUiPostFormButton self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_post_form_button(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_root(
      AsUiRoot self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_root(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_select(
      AsUiSelect self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_select(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_switch(
      AsUiSwitch self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_switch(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_text(
      AsUiText self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_text(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_text_input(
      AsUiTextInput self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_text_input(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_as_ui_textarea(
      AsUiTextarea self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_as_ui_textarea(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_bool(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_f_64(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_post_form_props_for_as_ui(
      PostFormPropsForAsUi self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_post_form_props_for_as_ui(self, serializer);
  }

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putFloat64(self);
  }

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_String(item, serializer);
    }
  }

  @protected
  void sse_encode_list_as_ui_button(
      List<AsUiButton> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_as_ui_button(item, serializer);
    }
  }

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    serializer.buffer.putUint8List(self);
  }

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_string_string(item, serializer);
    }
  }

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_String(self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          AsApiLib? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsApiLib(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          AsUiButtonCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiButtonCallback(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          AsUiLib? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiLib(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          AsUiMfmCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiMfmCallback(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          AsUiNumberCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiNumberCallback(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          AsUiSelectCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSelectCallback(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          AsUiSwitchCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiSwitchCallback(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          AsUiTextInputCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextInputCallback(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          AsUiTextareaCallback? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAsUiTextareaCallback(
          self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_as_play_lib(
      AsPlayLib? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_as_play_lib(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_bool(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_f_64(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_post_form_props_for_as_ui(
      PostFormPropsForAsUi? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_post_form_props_for_as_ui(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_list_String(
      List<String>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_list_String(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_list_as_ui_button(
      List<AsUiButton>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_list_as_ui_button(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_list_record_string_string(
      List<(String, String)>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_list_record_string_string(self, serializer);
    }
  }

  @protected
  void sse_encode_post_form_props_for_as_ui(
      PostFormPropsForAsUi self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.text, serializer);
    sse_encode_opt_String(self.cw, serializer);
    sse_encode_opt_String(self.visibility, serializer);
    sse_encode_opt_box_autoadd_bool(self.localOnly, serializer);
  }

  @protected
  void sse_encode_record_string_opt_string(
      (String, String?) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_opt_String(self.$2, serializer);
  }

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_String(self.$2, serializer);
  }

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self);
  }

  @protected
  void sse_encode_unit(void self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putInt32(self);
  }
}

@sealed
class AiScriptImpl extends RustOpaque implements AiScript {
  // Not to be used by end users
  AiScriptImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AiScriptImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AiScript,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AiScript,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_AiScriptPtr,
  );

  Future<void> abort() => RustLib.instance.api.crateApiAiscriptAiScriptAbort(
        that: this,
      );

  Future<void> exec({required String input}) => RustLib.instance.api
      .crateApiAiscriptAiScriptExec(that: this, input: input);
}

@sealed
class AsApiLibImpl extends RustOpaque implements AsApiLib {
  // Not to be used by end users
  AsApiLibImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsApiLibImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsApiLib,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsApiLib,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsApiLibPtr,
  );
}

@sealed
class AsUiButtonCallbackImpl extends RustOpaque implements AsUiButtonCallback {
  // Not to be used by end users
  AsUiButtonCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiButtonCallbackImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsUiButtonCallback,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiButtonCallback,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiButtonCallbackPtr,
  );

  Future<void> call() =>
      RustLib.instance.api.crateApiAiscriptUiAsUiButtonCallbackCall(
        that: this,
      );
}

@sealed
class AsUiLibImpl extends RustOpaque implements AsUiLib {
  // Not to be used by end users
  AsUiLibImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiLibImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsUiLib,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiLib,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiLibPtr,
  );
}

@sealed
class AsUiMfmCallbackImpl extends RustOpaque implements AsUiMfmCallback {
  // Not to be used by end users
  AsUiMfmCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiMfmCallbackImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsUiMfmCallback,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiMfmCallback,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiMfmCallbackPtr,
  );

  Future<void> call({required String value}) => RustLib.instance.api
      .crateApiAiscriptUiAsUiMfmCallbackCall(that: this, value: value);
}

@sealed
class AsUiNumberCallbackImpl extends RustOpaque implements AsUiNumberCallback {
  // Not to be used by end users
  AsUiNumberCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiNumberCallbackImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsUiNumberCallback,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiNumberCallback,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiNumberCallbackPtr,
  );

  Future<void> call({required double value}) => RustLib.instance.api
      .crateApiAiscriptUiAsUiNumberCallbackCall(that: this, value: value);
}

@sealed
class AsUiSelectCallbackImpl extends RustOpaque implements AsUiSelectCallback {
  // Not to be used by end users
  AsUiSelectCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiSelectCallbackImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsUiSelectCallback,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiSelectCallback,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiSelectCallbackPtr,
  );

  Future<void> call({required String value}) => RustLib.instance.api
      .crateApiAiscriptUiAsUiSelectCallbackCall(that: this, value: value);
}

@sealed
class AsUiSwitchCallbackImpl extends RustOpaque implements AsUiSwitchCallback {
  // Not to be used by end users
  AsUiSwitchCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiSwitchCallbackImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AsUiSwitchCallback,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AsUiSwitchCallback,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiSwitchCallbackPtr,
  );

  Future<void> call({required bool value}) => RustLib.instance.api
      .crateApiAiscriptUiAsUiSwitchCallbackCall(that: this, value: value);
}

@sealed
class AsUiTextInputCallbackImpl extends RustOpaque
    implements AsUiTextInputCallback {
  // Not to be used by end users
  AsUiTextInputCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiTextInputCallbackImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_AsUiTextInputCallback,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiTextInputCallback,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiTextInputCallbackPtr,
  );

  Future<void> call({required String value}) => RustLib.instance.api
      .crateApiAiscriptUiAsUiTextInputCallbackCall(that: this, value: value);
}

@sealed
class AsUiTextareaCallbackImpl extends RustOpaque
    implements AsUiTextareaCallback {
  // Not to be used by end users
  AsUiTextareaCallbackImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AsUiTextareaCallbackImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_AsUiTextareaCallback,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiTextareaCallback,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AsUiTextareaCallbackPtr,
  );

  Future<void> call({required String value}) => RustLib.instance.api
      .crateApiAiscriptUiAsUiTextareaCallbackCall(that: this, value: value);
}
